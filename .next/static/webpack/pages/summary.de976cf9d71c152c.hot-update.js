"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/summary",{

/***/ "./pages/lib/chatgptsum.ts":
/*!*********************************!*\
  !*** ./pages/lib/chatgptsum.ts ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ ChatGPT; }\n/* harmony export */ });\nclass ChatGPT {\n    async getCompletion(prompt) {\n        const path = \"\".concat(this.url, \"/chat/completions\");\n        const response = await fetch(\"\".concat(path), {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: \"Bearer \".concat(\"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\")\n            },\n            body: JSON.stringify({\n                model: this.model,\n                messages: [\n                    {\n                        role: \"system\",\n                        content: \"Your task is to take the body of text I give you and generate a three bullet summary of the content. Separate each bullet by a '/' character\"\n                    },\n                    {\n                        role: \"user\",\n                        content: prompt\n                    }\n                ],\n                temperature: this.temperature,\n                max_tokens: this.max_tokens,\n                top_p: this.top_p,\n                frequency_penalty: this.frequency_penalty,\n                presence_penalty: this.presence_penalty\n            })\n        });\n        try {\n            const data = await response.json();\n            console.log(data);\n            console.log(prompt);\n            return data.choices[0].message.content;\n        } catch (error) {\n            return \"\".concat(error);\n        }\n    }\n    // apiKey: string;\n    constructor(){\n        this.url = \"https://api.openai.com/v1\";\n        this.model = \"gpt-3.5-turbo\";\n        this.temperature = 0.9;\n        this.max_tokens = 3000;\n        this.top_p = 0;\n        this.frequency_penalty = 0;\n        this.presence_penalty = 0;\n    // this.apiKey = process.env.OPENAI_API_KEY ?? \"\";\n    }\n}\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9saWIvY2hhdGdwdHN1bS50cy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQWUsTUFBTUE7SUFvQmpCLE1BQU1DLGNBQWNDLE1BQWMsRUFBRTtRQUNoQyxNQUFNQyxPQUFPLEdBQVksT0FBVCxJQUFJLENBQUNDLEdBQUcsRUFBQztRQUN6QixNQUFNQyxXQUFXLE1BQU1DLE1BQU0sR0FBUSxPQUFMSCxPQUFRO1lBQ3BDSSxRQUFRO1lBQ1JDLFNBQVM7Z0JBQ0wsZ0JBQWdCO2dCQUNoQkMsZUFBZSxVQUFpRCxPQUF2Q0MscURBQXNDO1lBQ25FO1lBQ0FHLE1BQU1DLEtBQUtDLFNBQVMsQ0FBQztnQkFDakJDLE9BQU8sSUFBSSxDQUFDQSxLQUFLO2dCQUNqQkMsVUFBVTtvQkFDTjt3QkFDSUMsTUFBTTt3QkFDTkMsU0FBVTtvQkFDZDtvQkFDQTt3QkFBRUQsTUFBTTt3QkFBUUMsU0FBU2pCO29CQUFPO2lCQUNuQztnQkFDRGtCLGFBQWEsSUFBSSxDQUFDQSxXQUFXO2dCQUM3QkMsWUFBWSxJQUFJLENBQUNBLFVBQVU7Z0JBQzNCQyxPQUFPLElBQUksQ0FBQ0EsS0FBSztnQkFDakJDLG1CQUFtQixJQUFJLENBQUNBLGlCQUFpQjtnQkFDekNDLGtCQUFrQixJQUFJLENBQUNBLGdCQUFnQjtZQUMzQztRQUNKO1FBQ0EsSUFBSTtZQUNBLE1BQU1DLE9BQU8sTUFBTXBCLFNBQVNxQixJQUFJO1lBQ2hDQyxRQUFRQyxHQUFHLENBQUNIO1lBQ1pFLFFBQVFDLEdBQUcsQ0FBQzFCO1lBQ1osT0FBT3VCLEtBQUtJLE9BQU8sQ0FBQyxFQUFFLENBQUNDLE9BQU8sQ0FBQ1gsT0FBTztRQUMxQyxFQUFFLE9BQU9ZLE9BQU87WUFDWixPQUFPLEdBQVMsT0FBTkE7UUFDZDtJQUNKO0lBNUNBLGtCQUFrQjtJQUNsQkMsYUFBYztRQUNWLElBQUksQ0FBQzVCLEdBQUcsR0FBRztRQUNYLElBQUksQ0FBQ1ksS0FBSyxHQUFHO1FBQ2IsSUFBSSxDQUFDSSxXQUFXLEdBQUc7UUFDbkIsSUFBSSxDQUFDQyxVQUFVLEdBQUc7UUFDbEIsSUFBSSxDQUFDQyxLQUFLLEdBQUc7UUFDYixJQUFJLENBQUNDLGlCQUFpQixHQUFHO1FBQ3pCLElBQUksQ0FBQ0MsZ0JBQWdCLEdBQUc7SUFDeEIsa0RBQWtEO0lBQ3REO0FBbUNKO0FBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vcGFnZXMvbGliL2NoYXRncHRzdW0udHM/YzNkNCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBjbGFzcyBDaGF0R1BUIHtcbiAgICB1cmw6IHN0cmluZztcbiAgICBtb2RlbDogc3RyaW5nO1xuICAgIHRlbXBlcmF0dXJlOiBudW1iZXI7XG4gICAgbWF4X3Rva2VuczogbnVtYmVyO1xuICAgIHRvcF9wOiBudW1iZXI7XG4gICAgZnJlcXVlbmN5X3BlbmFsdHk6IG51bWJlcjtcbiAgICBwcmVzZW5jZV9wZW5hbHR5OiBudW1iZXI7XG4gICAgLy8gYXBpS2V5OiBzdHJpbmc7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMudXJsID0gXCJodHRwczovL2FwaS5vcGVuYWkuY29tL3YxXCI7XG4gICAgICAgIHRoaXMubW9kZWwgPSBcImdwdC0zLjUtdHVyYm9cIjtcbiAgICAgICAgdGhpcy50ZW1wZXJhdHVyZSA9IDAuOTtcbiAgICAgICAgdGhpcy5tYXhfdG9rZW5zID0gMzAwMDtcbiAgICAgICAgdGhpcy50b3BfcCA9IDA7XG4gICAgICAgIHRoaXMuZnJlcXVlbmN5X3BlbmFsdHkgPSAwO1xuICAgICAgICB0aGlzLnByZXNlbmNlX3BlbmFsdHkgPSAwO1xuICAgICAgICAvLyB0aGlzLmFwaUtleSA9IHByb2Nlc3MuZW52Lk9QRU5BSV9BUElfS0VZID8/IFwiXCI7XG4gICAgfVxuXG4gICAgYXN5bmMgZ2V0Q29tcGxldGlvbihwcm9tcHQ6IHN0cmluZykge1xuICAgICAgICBjb25zdCBwYXRoID0gYCR7dGhpcy51cmx9L2NoYXQvY29tcGxldGlvbnNgO1xuICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGAke3BhdGh9YCwge1xuICAgICAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICAgICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICAgICAgICAgICAgICBBdXRob3JpemF0aW9uOiBgQmVhcmVyICR7cHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfT1BFTkFJX0FQSV9LRVl9YCxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgICAgICAgICAgbW9kZWw6IHRoaXMubW9kZWwsXG4gICAgICAgICAgICAgICAgbWVzc2FnZXM6IFtcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgcm9sZTogXCJzeXN0ZW1cIixcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6IGBZb3VyIHRhc2sgaXMgdG8gdGFrZSB0aGUgYm9keSBvZiB0ZXh0IEkgZ2l2ZSB5b3UgYW5kIGdlbmVyYXRlIGEgdGhyZWUgYnVsbGV0IHN1bW1hcnkgb2YgdGhlIGNvbnRlbnQuIFNlcGFyYXRlIGVhY2ggYnVsbGV0IGJ5IGEgJy8nIGNoYXJhY3RlcmAsXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIHsgcm9sZTogXCJ1c2VyXCIsIGNvbnRlbnQ6IHByb21wdCB9LFxuICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgdGVtcGVyYXR1cmU6IHRoaXMudGVtcGVyYXR1cmUsXG4gICAgICAgICAgICAgICAgbWF4X3Rva2VuczogdGhpcy5tYXhfdG9rZW5zLFxuICAgICAgICAgICAgICAgIHRvcF9wOiB0aGlzLnRvcF9wLFxuICAgICAgICAgICAgICAgIGZyZXF1ZW5jeV9wZW5hbHR5OiB0aGlzLmZyZXF1ZW5jeV9wZW5hbHR5LFxuICAgICAgICAgICAgICAgIHByZXNlbmNlX3BlbmFsdHk6IHRoaXMucHJlc2VuY2VfcGVuYWx0eSxcbiAgICAgICAgICAgIH0pLFxuICAgICAgICB9KTtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhkYXRhKTtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKHByb21wdCk7XG4gICAgICAgICAgICByZXR1cm4gZGF0YS5jaG9pY2VzWzBdLm1lc3NhZ2UuY29udGVudDtcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIHJldHVybiBgJHtlcnJvcn1gO1xuICAgICAgICB9XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbIkNoYXRHUFQiLCJnZXRDb21wbGV0aW9uIiwicHJvbXB0IiwicGF0aCIsInVybCIsInJlc3BvbnNlIiwiZmV0Y2giLCJtZXRob2QiLCJoZWFkZXJzIiwiQXV0aG9yaXphdGlvbiIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19PUEVOQUlfQVBJX0tFWSIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwibW9kZWwiLCJtZXNzYWdlcyIsInJvbGUiLCJjb250ZW50IiwidGVtcGVyYXR1cmUiLCJtYXhfdG9rZW5zIiwidG9wX3AiLCJmcmVxdWVuY3lfcGVuYWx0eSIsInByZXNlbmNlX3BlbmFsdHkiLCJkYXRhIiwianNvbiIsImNvbnNvbGUiLCJsb2ciLCJjaG9pY2VzIiwibWVzc2FnZSIsImVycm9yIiwiY29uc3RydWN0b3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./pages/lib/chatgptsum.ts\n"));

/***/ })

});