"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./pages/lib/chatgpt.ts":
/*!******************************!*\
  !*** ./pages/lib/chatgpt.ts ***!
  \******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ ChatGPT; }\n/* harmony export */ });\nclass ChatGPT {\n    async getCompletion(prompt) {\n        const path = \"\".concat(this.url, \"/chat/completions\");\n        const response = await fetch(\"\".concat(path), {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: \"Bearer \".concat(this.apiKey)\n            },\n            body: JSON.stringify({\n                model: this.model,\n                messages: [\n                    {\n                        role: \"system\",\n                        content: \"Your task is to take the body of text I give you and give me three lines of output. First line will be 3 questions about the content.\\n                        Second line will be 3 possible answer choices to each question grouped together in an array. Third line will be the correct answer to each question. \\n                        This is kind of like quiz on the content\\n                         \"\n                    },\n                    {\n                        role: \"user\",\n                        content: prompt\n                    }\n                ],\n                temperature: this.temperature,\n                max_tokens: this.max_tokens,\n                top_p: this.top_p,\n                frequency_penalty: this.frequency_penalty,\n                presence_penalty: this.presence_penalty\n            })\n        });\n        try {\n            const data = await response.json();\n            console.log(data);\n            console.log(prompt);\n            return data.choices[0].message.content;\n        } catch (error) {\n            return \"\".concat(error);\n        }\n    }\n    constructor(){\n        this.url = \"https://api.openai.com/v1\";\n        this.model = \"gpt-3.5-turbo\";\n        this.temperature = 0.2;\n        this.max_tokens = 3000;\n        this.top_p = 0;\n        this.frequency_penalty = 0;\n        this.presence_penalty = 0;\n        this.apiKey = \"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\";\n    }\n}\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9saWIvY2hhdGdwdC50cy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQWUsTUFBTUE7SUFvQmpCLE1BQU1DLGNBQWNDLE1BQWMsRUFBRTtRQUNoQyxNQUFNQyxPQUFPLEdBQVksT0FBVCxJQUFJLENBQUNDLEdBQUcsRUFBQztRQUN6QixNQUFNQyxXQUFXLE1BQU1DLE1BQU0sR0FBUSxPQUFMSCxPQUFRO1lBQ3BDSSxRQUFRO1lBQ1JDLFNBQVM7Z0JBQ0wsZ0JBQWdCO2dCQUNoQkMsZUFBZSxVQUFzQixPQUFaLElBQUksQ0FBQ0MsTUFBTTtZQUN4QztZQUNBQyxNQUFNQyxLQUFLQyxTQUFTLENBQUM7Z0JBQ2pCQyxPQUFPLElBQUksQ0FBQ0EsS0FBSztnQkFDakJDLFVBQVU7b0JBQ047d0JBQ0lDLE1BQU07d0JBQ05DLFNBQVU7b0JBSWQ7b0JBQ0E7d0JBQUVELE1BQU07d0JBQVFDLFNBQVNmO29CQUFPO2lCQUNuQztnQkFDRGdCLGFBQWEsSUFBSSxDQUFDQSxXQUFXO2dCQUM3QkMsWUFBWSxJQUFJLENBQUNBLFVBQVU7Z0JBQzNCQyxPQUFPLElBQUksQ0FBQ0EsS0FBSztnQkFDakJDLG1CQUFtQixJQUFJLENBQUNBLGlCQUFpQjtnQkFDekNDLGtCQUFrQixJQUFJLENBQUNBLGdCQUFnQjtZQUMzQztRQUNKO1FBQ0EsSUFBSTtZQUNBLE1BQU1DLE9BQU8sTUFBTWxCLFNBQVNtQixJQUFJO1lBQ2hDQyxRQUFRQyxHQUFHLENBQUNIO1lBQ1pFLFFBQVFDLEdBQUcsQ0FBQ3hCO1lBQ1osT0FBT3FCLEtBQUtJLE9BQU8sQ0FBQyxFQUFFLENBQUNDLE9BQU8sQ0FBQ1gsT0FBTztRQUMxQyxFQUFFLE9BQU9ZLE9BQU87WUFDWixPQUFPLEdBQVMsT0FBTkE7UUFDZDtJQUNKO0lBOUNBQyxhQUFjO1FBQ1YsSUFBSSxDQUFDMUIsR0FBRyxHQUFHO1FBQ1gsSUFBSSxDQUFDVSxLQUFLLEdBQUc7UUFDYixJQUFJLENBQUNJLFdBQVcsR0FBRztRQUNuQixJQUFJLENBQUNDLFVBQVUsR0FBRztRQUNsQixJQUFJLENBQUNDLEtBQUssR0FBRztRQUNiLElBQUksQ0FBQ0MsaUJBQWlCLEdBQUc7UUFDekIsSUFBSSxDQUFDQyxnQkFBZ0IsR0FBRztRQUN4QixJQUFJLENBQUNaLE1BQU0sR0FBRztJQUNsQjtBQXNDSjtBQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3BhZ2VzL2xpYi9jaGF0Z3B0LnRzPzkwNjYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2hhdEdQVCB7XG4gICAgdXJsOiBzdHJpbmc7XG4gICAgbW9kZWw6IHN0cmluZztcbiAgICB0ZW1wZXJhdHVyZTogbnVtYmVyO1xuICAgIG1heF90b2tlbnM6IG51bWJlcjtcbiAgICB0b3BfcDogbnVtYmVyO1xuICAgIGZyZXF1ZW5jeV9wZW5hbHR5OiBudW1iZXI7XG4gICAgcHJlc2VuY2VfcGVuYWx0eTogbnVtYmVyO1xuICAgIGFwaUtleTogc3RyaW5nO1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLnVybCA9IFwiaHR0cHM6Ly9hcGkub3BlbmFpLmNvbS92MVwiO1xuICAgICAgICB0aGlzLm1vZGVsID0gXCJncHQtMy41LXR1cmJvXCI7XG4gICAgICAgIHRoaXMudGVtcGVyYXR1cmUgPSAwLjI7XG4gICAgICAgIHRoaXMubWF4X3Rva2VucyA9IDMwMDA7XG4gICAgICAgIHRoaXMudG9wX3AgPSAwO1xuICAgICAgICB0aGlzLmZyZXF1ZW5jeV9wZW5hbHR5ID0gMDtcbiAgICAgICAgdGhpcy5wcmVzZW5jZV9wZW5hbHR5ID0gMDtcbiAgICAgICAgdGhpcy5hcGlLZXkgPSBcInNrLVdwWEJ2a0hwQ1pPa0ZIQXdTdnE0VDNCbGJrRkpyWTNzZVl0SHh5WjUxcXRLUU5XS1wiITtcbiAgICB9XG5cbiAgICBhc3luYyBnZXRDb21wbGV0aW9uKHByb21wdDogc3RyaW5nKSB7XG4gICAgICAgIGNvbnN0IHBhdGggPSBgJHt0aGlzLnVybH0vY2hhdC9jb21wbGV0aW9uc2A7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYCR7cGF0aH1gLCB7XG4gICAgICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxuICAgICAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgICAgICAgICAgIEF1dGhvcml6YXRpb246IGBCZWFyZXIgJHt0aGlzLmFwaUtleX1gLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgICAgICAgICBtb2RlbDogdGhpcy5tb2RlbCxcbiAgICAgICAgICAgICAgICBtZXNzYWdlczogW1xuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICByb2xlOiBcInN5c3RlbVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudDogYFlvdXIgdGFzayBpcyB0byB0YWtlIHRoZSBib2R5IG9mIHRleHQgSSBnaXZlIHlvdSBhbmQgZ2l2ZSBtZSB0aHJlZSBsaW5lcyBvZiBvdXRwdXQuIEZpcnN0IGxpbmUgd2lsbCBiZSAzIHF1ZXN0aW9ucyBhYm91dCB0aGUgY29udGVudC5cbiAgICAgICAgICAgICAgICAgICAgICAgIFNlY29uZCBsaW5lIHdpbGwgYmUgMyBwb3NzaWJsZSBhbnN3ZXIgY2hvaWNlcyB0byBlYWNoIHF1ZXN0aW9uIGdyb3VwZWQgdG9nZXRoZXIgaW4gYW4gYXJyYXkuIFRoaXJkIGxpbmUgd2lsbCBiZSB0aGUgY29ycmVjdCBhbnN3ZXIgdG8gZWFjaCBxdWVzdGlvbi4gXG4gICAgICAgICAgICAgICAgICAgICAgICBUaGlzIGlzIGtpbmQgb2YgbGlrZSBxdWl6IG9uIHRoZSBjb250ZW50XG4gICAgICAgICAgICAgICAgICAgICAgICAgYCxcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgeyByb2xlOiBcInVzZXJcIiwgY29udGVudDogcHJvbXB0IH0sXG4gICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICB0ZW1wZXJhdHVyZTogdGhpcy50ZW1wZXJhdHVyZSxcbiAgICAgICAgICAgICAgICBtYXhfdG9rZW5zOiB0aGlzLm1heF90b2tlbnMsXG4gICAgICAgICAgICAgICAgdG9wX3A6IHRoaXMudG9wX3AsXG4gICAgICAgICAgICAgICAgZnJlcXVlbmN5X3BlbmFsdHk6IHRoaXMuZnJlcXVlbmN5X3BlbmFsdHksXG4gICAgICAgICAgICAgICAgcHJlc2VuY2VfcGVuYWx0eTogdGhpcy5wcmVzZW5jZV9wZW5hbHR5LFxuICAgICAgICAgICAgfSksXG4gICAgICAgIH0pO1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGRhdGEpO1xuICAgICAgICAgICAgY29uc29sZS5sb2cocHJvbXB0KTtcbiAgICAgICAgICAgIHJldHVybiBkYXRhLmNob2ljZXNbMF0ubWVzc2FnZS5jb250ZW50O1xuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgcmV0dXJuIGAke2Vycm9yfWA7XG4gICAgICAgIH1cbiAgICB9XG59XG4iXSwibmFtZXMiOlsiQ2hhdEdQVCIsImdldENvbXBsZXRpb24iLCJwcm9tcHQiLCJwYXRoIiwidXJsIiwicmVzcG9uc2UiLCJmZXRjaCIsIm1ldGhvZCIsImhlYWRlcnMiLCJBdXRob3JpemF0aW9uIiwiYXBpS2V5IiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJtb2RlbCIsIm1lc3NhZ2VzIiwicm9sZSIsImNvbnRlbnQiLCJ0ZW1wZXJhdHVyZSIsIm1heF90b2tlbnMiLCJ0b3BfcCIsImZyZXF1ZW5jeV9wZW5hbHR5IiwicHJlc2VuY2VfcGVuYWx0eSIsImRhdGEiLCJqc29uIiwiY29uc29sZSIsImxvZyIsImNob2ljZXMiLCJtZXNzYWdlIiwiZXJyb3IiLCJjb25zdHJ1Y3RvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./pages/lib/chatgpt.ts\n"));

/***/ })

});